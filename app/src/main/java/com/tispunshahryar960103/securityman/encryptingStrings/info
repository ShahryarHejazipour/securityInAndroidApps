
دو روش برای encrypt کردن رشته ها Strings :

الف - رشته ها را در build Config برنامه بزاریم .

ب - رشته ها در قسمت NDK برنامه بزاریم.

روش دوم امنیت بیشتری دارد

---------------------------------------------
 روش الف - build config :

1- در فایل gradle.properties یک تگ با نام دلخواه تعریف کرده و برابر با مقدار رشته ی مورد نظرمان قرار می دهیم. برای نمونه :

 serverUrl="http://api.androidsupport.ir/"

 و برنامه را sync می کنیم.

 2- برای دسترسی به این رشته در برنامه کد زیر را در تگ android در فایل build.gradle  ماژول می نویسیم :

  buildTypes.each {

        it.buildConfigField 'String' , 'serverUrl' , serverUrl
    }

    و برنامه را sync می کنیم.

    3- در کلاس مورد نظر که به آن رشته نیاز داریم کافی است پس از تعریف کردن متغیر از نوع رشته مقدار آن را به جای اینکه
    مستقیما به صورت رشته ای در کلاس وارد کنیم مثلا به صورت زیر وارد کنیم :

     public static final String BASE_URL= BuildConfig.serverUrl;


     نکته بسیار مهم :
     این روش روش امنی نیست چرا که با decompile  کردن فایل apk برنامه باز هم به آسانی می توان به رشته های تعریف شده
     به این روش نیز دسترسی داشت.

     -----------------------------------------------------------

     روش ب - استفاده از NDK :

     1- در فایل native-lib.cpp که برای نوشتن فانکشن های ++C است رفته و یک فانکشن جدید می نویسیم :

Java_com_tispunshahryar960103_securityman_api_ApiClient_getUrl(
        JNIEnv* env,
        jobject /* this */) {

    std::string mUrl = "http://api.androidsupport.ir/";

    return env->NewStringUTF(mUrl.c_str());
}

سپس برنامه را build می کنیم.

2- فراخوانی این فانکشن ئر کلاس ApiClient همانند همان روش NDK است.
فایل کلاس ApiClient دیده شود.


نکته : در این روش حتی در حالت Debug هم نمی توان به مقدار واقعی رشته ها دسترسی داشت و امنیت بالاتری برای حفظ رشته های برنامه دارد.






